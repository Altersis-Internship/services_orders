version: "3.8"

services:
  orders-service:
    image: monapp-orders-service:latest
    container_name: orders-service
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - MONGO_URL=mongodb://orders-db:27017/data
      - orders.payment-uri=http://users-orders-mock:1080/payment
      - orders.shipping-uri=http://users-orders-mock:1080/shipping
    networks:
      - monitoring-net
    depends_on:
      - users-orders-mock
      - mongodb

  users-orders-mock:
    image: mockserver/mockserver
    container_name: users-orders-mock
    ports:
      - "1080:1080"
    networks:
      - monitoring-net
    environment:
      - MOCKSERVER_INITIALIZATION_JSON_PATH=/config/mock-expectations.json
    volumes:
      - ./mock-expectations.json:/config/mock-expectations.json

  mongodb:
    image: mongo:6
    container_name: orders-db
    ports:
      - "27017:27017"
    networks:
      - monitoring-net
    volumes:
      - mongo-data:/data/db

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    networks:
      - monitoring-net

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"
    networks:
      - monitoring-net
    depends_on:
      - prometheus

networks:
  monitoring-net:
    driver: bridge

volumes:
  mongo-data: